# -*- coding: utf-8 -*-
"""Tier(1) resume parsing .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-ulbadChba9YQuQ1AU7Qtpr4qSAgugao

## *** Intel-One-Api--Hackathon  (DECRYPTORS)***

# ***Description about the project:***

We team Decryptors presents 
"WORKFORCE360", a Machine Learning model that predicts employee attrition to 
help companies retain valuable employees 
and reduce costs associated with turnover. 
Our three-tier solution includes resume 
parsing, predictive analytics, and 
performance prediction to provide a 
comprehensive HR solution that helps 
companies make informed decisions 
about recruitment and employee retention.

## *** Installation of required modules**
"""

pip install nltk

import nltk
nltk.download('stopwords')

# pip install pyresparser 
from nltk.corpus import stopwords
stopwords.words('english')

! pip install spacy==2.3.5

pip install https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-2.3.1/en_core_web_sm-2.3.1.tar.gz

pip install pyresparser

"""## ***Tier 1: Resume parsing***"""

import string
import csv
import re
import sys
import importlib
import os
import spacy
from pyresparser import ResumeParser
import pandas as pd
import nltk
from spacy.matcher import matcher
import multiprocessing as mp

def main():
    data = ResumeParser("/content/Profile.pdf").get_extracted_data()
    print(data)

    # Added encoding utf-8 to prevent unicode error
    with open("/content/Profile.pdf", "w", encoding='utf-8') as rf:
        rf.truncate()
        rf.write(str(data))

    print("Resume results are getting printed into resume.txt.")

    # Extracting skills
    resume_list = []
    skill_list = []

    data = pd.read_csv("/content/skills.csv")
    skills = list(data.columns.values)

    resume_file ="/content/resume2.txt"
    with open(resume_file, 'r',  encoding='utf-8') as f: 
        for line in f:
            resume_list.append(line.strip())
            for token  in resume_list:
                if token.lower() in skills:
                    skill_list.append(token)
    print(skill_list)

if __name__ == "__main__":
    main()



"""##-------------------***SUCCESSFULLY COMPLETED TIER***  1...!!!--------------- """

